{"version":3,"sources":["components/Nav/Nav.tsx","components/Loader/Loader.tsx","components/PersonInfo/PersonInfo.tsx","components/PeopleTable/PeopleTable.tsx","api.ts","App.tsx","index.tsx"],"names":["Nav","className","role","isActive","cn","to","Loader","PersonInfo","person","selectedPerson","setSelectedPerson","name","born","died","sex","slug","fatherName","motherName","mother","father","onClick","event","preventDefault","PeopleTable","fetchPeople","people","isLoading","error","useState","handleSetSelectedPerson","useEffect","length","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","App","setPeople","setError","setIsLoading","findPeopleWithParents","peopleFromServer","peopleWithParents","child","find","parent","useCallback","data","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.6bbd2455.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Nav = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={\n            (({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            }))\n          }\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={\n            (({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            }))\n          }\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n  selectedPerson: string;\n  setSelectedPerson: (slug: string) => void;\n}\n\nexport const PersonInfo: React.FC<Props> = ({\n  person,\n  selectedPerson,\n  setSelectedPerson,\n}) => {\n  const {\n    name,\n    born,\n    died,\n    sex,\n    slug,\n    fatherName,\n    motherName,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': slug === selectedPerson })}\n    >\n      <td>\n        <Link\n          to={slug}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n          onClick={(event) => {\n            event.preventDefault();\n            setSelectedPerson(slug);\n          }}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {\n        mother\n          ? (\n            <td>\n              <Link\n                to={`/people/${slug}`}\n                className={cn({ 'has-text-danger': mother.sex === 'f' })}\n                onClick={(event) => {\n                  event.preventDefault();\n                  setSelectedPerson(mother.slug);\n                }}\n              >\n                {motherName}\n              </Link>\n            </td>\n          ) : (\n            <td>\n              {motherName || '-'}\n            </td>\n          )\n      }\n      {\n        father\n          ? (\n            <td>\n              <Link\n                to={slug}\n                onClick={(event) => {\n                  event.preventDefault();\n                  setSelectedPerson(father.slug);\n                }}\n              >\n                {fatherName}\n              </Link>\n            </td>\n          ) : (\n            <td>\n              {fatherName || '-'}\n            </td>\n          )\n      }\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonInfo } from '../PersonInfo';\n\ninterface Props {\n  people: Person[];\n  error: string | null;\n  isLoading: boolean;\n  fetchPeople: () => void;\n}\n\nexport const PeopleTable: React.FC<Props> = ({\n  fetchPeople,\n  people,\n  isLoading,\n  error,\n}) => {\n  const [selectedPerson, setSelectedPerson] = useState('');\n\n  const handleSetSelectedPerson = (slug: string) => {\n    setSelectedPerson(slug);\n  };\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {error === 'load' && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {people.length === 0 && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {isLoading\n          ? (<Loader />)\n          : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonInfo\n                    person={person}\n                    selectedPerson={selectedPerson}\n                    setSelectedPerson={handleSetSelectedPerson}\n                    key={person.slug}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n      </div>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useCallback, useState } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Nav } from './components/Nav';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\nimport { Person } from './types';\nimport { getPeople } from './api';\n\nexport const App = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const findPeopleWithParents = (peopleFromServer: Person[]) => {\n    const peopleWithParents = peopleFromServer.map(child => {\n      const mother = peopleFromServer.find(\n        parent => parent.name === child.motherName,\n      );\n      const father = peopleFromServer.find(\n        parent => parent.name === child.fatherName,\n      );\n\n      return {\n        ...child,\n        mother,\n        father,\n      };\n    });\n\n    setPeople(peopleWithParents);\n  };\n\n  const fetchPeople = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      await getPeople().then(data => findPeopleWithParents(data));\n    } catch {\n      setError('load');\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  return (\n    <div data-cy=\"app\">\n      <Nav />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<h1 className=\"title\">Home Page</h1>}\n            />\n\n            <Route\n              path=\"people\"\n              element={(\n                <PeopleTable\n                  people={people}\n                  error={error}\n                  isLoading={isLoading}\n                  fetchPeople={fetchPeople}\n                />\n              )}\n            />\n            <Route path=\"/people\">\n              <Route\n                index\n                element={(\n                  <PeopleTable\n                    people={people}\n                    error={error}\n                    isLoading={isLoading}\n                    fetchPeople={fetchPeople}\n                  />\n                )}\n              />\n              <Route\n                path=\":personSlug\"\n                element={(\n                  <PeopleTable\n                    people={people}\n                    error={error}\n                    isLoading={isLoading}\n                    fetchPeople={fetchPeople}\n                  />\n                )}\n              />\n            </Route>\n\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}