{"version":3,"sources":["components/Nav/Nav.tsx","components/Loader/Loader.tsx","components/PersonInfo/PersonInfo.tsx","api.ts","components/PeopleTable/PeopleTable.tsx","components/PageNotFound/PageNotFound.tsx","components/Home/Home.tsx","App.tsx","index.tsx"],"names":["Nav","memo","className","role","isActive","cn","to","Loader","PersonInfo","person","personSlug","useParams","name","born","died","sex","slug","fatherName","motherName","mother","father","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleTable","useState","people","setPeople","error","setError","isLoading","setIsLoading","findPeopleWithParents","peopleFromServer","peopleWithParents","map","child","find","parent","fetchPeople","useCallback","data","useEffect","length","PageNotFound","Home","App","path","element","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e3707fbc.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { memo } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Nav = memo(() => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={\n            (({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            }))\n          }\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={\n            (({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            }))\n          }\n          to=\"/people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n));\n","import './Loader.scss';\nimport { memo } from 'react';\n\nexport const Loader = memo(() => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n));\n","import { memo } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonInfo: React.FC<Props> = memo(({ person }) => {\n  const { personSlug } = useParams();\n\n  const {\n    name,\n    born,\n    died,\n    sex,\n    slug,\n    fatherName,\n    motherName,\n    mother,\n    father,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': slug === personSlug })}\n    >\n      <td>\n        <Link\n          to={`/people/${slug}`}\n          className={cn({ 'has-text-danger': sex === 'f' })}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      {\n        mother\n          ? (\n            <td>\n              <Link\n                to={`/people/${mother.slug}`}\n                className={cn({ 'has-text-danger': mother.sex === 'f' })}\n              >\n                {motherName}\n              </Link>\n            </td>\n          ) : (\n            <td>\n              {motherName || '-'}\n            </td>\n          )\n      }\n      {\n        father\n          ? (\n            <td>\n              <Link to={`/people/${father.slug}`}>\n                {fatherName}\n              </Link>\n            </td>\n          ) : (\n            <td>\n              {fatherName || '-'}\n            </td>\n          )\n      }\n    </tr>\n  );\n});\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  useCallback,\n  useEffect,\n  useState,\n  memo,\n} from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonInfo } from '../PersonInfo';\nimport { getPeople } from '../../api';\n\nexport const PeopleTable = memo(() => {\n  const [people, setPeople] = useState<Person[] | null>(null);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const findPeopleWithParents = (peopleFromServer: Person[]) => {\n    const peopleWithParents = peopleFromServer.map(child => {\n      const mother = peopleFromServer.find(\n        parent => parent.name === child.motherName,\n      );\n      const father = peopleFromServer.find(\n        parent => parent.name === child.fatherName,\n      );\n\n      return {\n        ...child,\n        mother,\n        father,\n      };\n    });\n\n    setPeople(peopleWithParents);\n  };\n\n  const fetchPeople = useCallback(async () => {\n    try {\n      await getPeople().then(data => findPeopleWithParents(data));\n    } catch {\n      setError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchPeople();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        {error && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n        {(people !== null && people.length === 0) && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n        {isLoading\n          ? (<Loader />)\n          : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people?.map(person => (\n                  <PersonInfo\n                    person={person}\n                    key={person.slug}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n      </div>\n    </div>\n  );\n});\n","import { memo } from 'react';\n\nexport const PageNotFound = memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import { memo } from 'react';\n\nexport const Home = memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import { Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { Nav } from './components/Nav';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\nimport { PageNotFound } from './components/PageNotFound';\nimport { Home } from './components/Home';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Nav />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"/\"\n            element={(<Home />)}\n          />\n\n          <Route\n            path=\"/home\"\n            element={(<Home />)}\n          />\n\n          <Route path=\"/people\">\n            <Route\n              index\n              element={(<PeopleTable />)}\n            />\n            <Route\n              path=\":personSlug\"\n              element={(<PeopleTable />)}\n            />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={(<PageNotFound />)}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}